<?xml version="1.0"?>
<robot name="rover" xmlns:xacro="http://ros.org/wiki/xacro">


<!-- <link name="base_footprint" />


<joint name="base_footprint_joint" type="fixed">
    <parent link="base_bot_link" />
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 0.015" rpy="0.0 0.0 0.0" />
</joint> -->

<link name="base_bot_link">
<inertial>
        <mass value="1"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
    <visual>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/base.stl"/>
        </geometry>
        <!-- <material name="RED"> -->
          <!-- <color rgba="1.0 0.0 0.0 1.0"/> -->
        <!-- </material> -->
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/base.stl"/>
        </geometry>
      </collision>
</link>


<joint name="upper_plate_joint" type="fixed">
    <parent link="base_bot_link" />
    <child link="upper_plate"/>
    <origin xyz="0.0 0.0 0.04" rpy="0.0 0.0 0.0" />
</joint>

<link name="upper_plate">
<inertial>
        <mass value="0.3"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
    <visual>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/upper_base_plate.stl"/>
        </geometry>
        <!-- <material name="RED"> -->
          <!-- <color rgba="1.0 0.0 0.0 1.0"/> -->
        <!-- </material> -->
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/upper_base_plate.stl"/>
        </geometry>
      </collision>
</link>






<joint name="laser_joint" type="fixed">
    <parent link="base_bot_link" />
    <child link="laser"/>
    <origin xyz="0.06 0.0 0.065" rpy="0.0 0.0 0.0" />
</joint>

<link name="laser">
<inertial>
        <mass value="0.3"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
    <visual>
        <geometry>
         <cylinder length="0.005" radius="0.01"/>
        </geometry>
        <!-- <material name="RED"> -->
          <!-- <color rgba="1.0 0.0 0.0 1.0"/> -->
        <!-- </material> -->
      </visual>
      <collision>
        <geometry>
           <cylinder length="0.005" radius="0.01"/>
        </geometry>
      </collision>
</link>






<joint name="tray_joint" type="fixed">
    <parent link="upper_plate" />
    <child link="tray"/>
    <origin xyz="0.07 -0.026 0.01" rpy="0.0 0.0 0.0" />
    <axis xyz="0 1 0" />
    <limit lower="-3.142" upper="3.142" effort="150.0" velocity="1.5"/>
</joint>

<link name="tray">
<inertial>
        <mass value="0.3"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
    <visual>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/tray.stl"/>
        </geometry>
        <!-- <material name="RED"> -->
          <!-- <color rgba="1.0 0.0 0.0 1.0"/> -->
        <!-- </material> -->
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/tray.stl"/>
        </geometry>
      </collision>
</link>



<!-- CAster Integrated -->


<joint name="caster_front_joint" type="fixed">
    <parent link="base_bot_link" />
    <child link="caster_front"/>
    <origin xyz="0.06 0 -0.018" rpy="0.0 0.0 0.0" />
    <!-- <axis xyz="0 1 0" /> -->
    <!-- <limit lower="-3.142" upper="3.142" effort="150.0" velocity="1.5"/> -->
</joint>

<link name="caster_front">
<inertial>
        <mass value="0.3"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
    <visual>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/caster_dummy.stl"/>
        </geometry>
        <!-- <material name="RED"> -->
          <!-- <color rgba="1.0 0.0 0.0 1.0"/> -->
        <!-- </material> -->
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/caster_dummy.stl"/>
        </geometry>
        <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
        </friction>
      </surface>
      </collision>
</link>





<joint name="caster_rear_joint" type="fixed">
    <parent link="base_bot_link" />
    <child link="caster_rear"/>
    <origin xyz="-0.06 0 -0.018" rpy="0.0 0.0 0" />
    <!-- <axis xyz="0 1 0" /> -->
    <!-- <limit lower="-3.142" upper="3.142" effort="150.0" velocity="1.5"/> -->
</joint>

<link name="caster_rear">
<inertial>
        <mass value="0.3"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
    <visual>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/caster_dummy.stl"/>
        </geometry>
        <!-- <material name="RED"> -->
          <!-- <color rgba="1.0 0.0 0.0 1.0"/> -->
        <!-- </material> -->
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/caster_dummy.stl"/>
        </geometry>
        <surface>
        <friction>
          <ode>
            <mu>0</mu>
            <mu2>0</mu2>
            <slip1>1.0</slip1>
            <slip2>1.0</slip2>
          </ode>
        </friction>
      </surface>
      </collision>
</link>






<!-- Wheels of the bot -->



<joint name="right_wheel_joint" type="continuous">
    <parent link="base_bot_link" />
    <child link="wheel_right"/>
    <origin xyz="0 -0.06 -0.007" rpy="0.0 0.0 0.0" />
    <axis xyz="0 1 0" />
    <limit lower="-3.142" upper="3.142" effort="150.0" velocity="1.5"/>
</joint>

<link name="wheel_right">
<inertial>
        <mass value="0.3"/>
        <origin xyz="0.0 0.0 0.0"/>
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
    <visual>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/wheel.stl"/>
        </geometry>
        <!-- <material name="RED"> -->
          <!-- <color rgba="1.0 0.0 0.0 1.0"/> -->
        <!-- </material> -->
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/wheel.stl"/>
        </geometry>
      </collision>
</link>





<joint name="left_wheel_joint" type="continuous">
    <parent link="base_bot_link" />
    <child link="wheel_left"/>
    <origin xyz="0 0.06 -0.007" rpy="0.0 0.0 0.0" />
    <axis xyz="0 1 0" />
    <limit lower="-3.142" upper="3.142" effort="150.0" velocity="1.5"/>
</joint>

<link name="wheel_left">
<inertial>
        <mass value="0.3"/>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 3.142" />
        <inertia
          ixx="0.01042" ixy="0.001177" ixz="-0.0008871"
          iyy="0.01045" iyz="0.0002226"
          izz="0.01817"/>
      </inertial>
    <visual>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/wheel.stl"/>
        </geometry>
        <!-- <material name="RED"> -->
          <!-- <color rgba="1.0 0.0 0.0 1.0"/> -->
        <!-- </material> -->
      </visual>
      <collision>
        <geometry>
          <mesh filename="package://rover_description/meshes/stl/wheel.stl"/>
        </geometry>
      </collision>
</link>




<!-- GAZEBO -->

<gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">
      <alwaysOn>true</alwaysOn>
      <updateRate>20</updateRate>
      <leftJoint>left_wheel_joint</leftJoint>
      <rightJoint>right_wheel_joint</rightJoint>
      <wheelSeparation>0.4</wheelSeparation>
      <wheelDiameter>0.2</wheelDiameter>
      <torque>0.1</torque>
      <commandTopic>cmd_vel</commandTopic>
      <odometryTopic>odom</odometryTopic>
      <odometryFrame>odom</odometryFrame>
      <robotBaseFrame>base_bot_link</robotBaseFrame>
    </plugin>
  </gazebo>


  <gazebo reference="laser">
    <sensor type="ray" name="head_rplidar_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>true</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619</min_angle>
            <max_angle>2.35619</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.05</min>
          <max>5.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_rplidar_controller" filename="libgazebo_ros_laser.so">
        <topicName>/obito/laser/scan</topicName>
        <frameName>laser</frameName>
      </plugin>
    </sensor>
  </gazebo> 



<gazebo reference="upper_plate">
    <self_collide>1</self_collide>
  </gazebo>
  <gazebo reference="tray">
    <self_collide>1</self_collide>
  </gazebo>
  <gazebo reference="wheel_right">
    <self_collide>1</self_collide>
  </gazebo>
  <gazebo reference="wheel_left">
    <self_collide>1</self_collide>
  </gazebo>



  <gazebo reference="upper_plate">
    <material>Gazebo/Orange</material>
  </gazebo>
    <gazebo reference="liwheel_rightnk1">
    <material>Gazebo/Orange</material>
  </gazebo>
    <gazebo reference="wheel_right">
    <material>Gazebo/Orange</material>
  </gazebo>
  <gazebo reference="wheel_left">
    <material>Gazebo/Orange</material>
  </gazebo>
    <gazebo reference="base_bot_link">
    <material>Gazebo/White</material>
  </gazebo>



</robot>